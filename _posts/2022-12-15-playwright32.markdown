---
layout: post
title: " playwright 的安装 使用（3）编写测试（元素定位2） "
date: "2022-12-15"
categories: 
---
<p>参考：<a href="https://playwright.dev/docs/locators">https://playwright.dev/docs/locators</a></p>

<p>1.图片使用文字进行替代</p>

<div class="admonitionContent_S0QG">
<p>当您的元素支持替代文本时使用此定位器，例如 {% highlight %}img{% endhighlight %}和 {% highlight %}area{% endhighlight %}元素。</p>
</div>

<p>所有图片都应该有一个 {% highlight %}alt{% endhighlight %}描述图像的属性。 根据替代文本定位图像 <a href="https://playwright.dev/docs/api/class-page#page-get-by-alt-text"> 您可以使用page.getByAltText(text[, options]) </a>。</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#393a34">&lt;</span><span style="color:#22863a">img</span><span style="color:#22863a"> </span><span style="color:#0550ae">alt</span><span style="color:#393a34">=</span><span style="color:#393a34">&quot;</span><span style="color:#c6105f">playwright logo</span><span style="color:#393a34">&quot;</span><span style="color:#22863a"> </span><span style="color:#0550ae">src</span><span style="color:#393a34">=</span><span style="color:#393a34">&quot;</span><span style="color:#c6105f">/img/playwright-logo.svg</span><span style="color:#393a34">&quot;</span><span style="color:#22863a"> </span><span style="color:#0550ae">width</span><span style="color:#393a34">=</span><span style="color:#393a34">&quot;</span><span style="color:#c6105f">100</span><span style="color:#393a34">&quot;</span><span style="color:#22863a"> </span><span style="color:#393a34">/&gt;</span></span>{% endhighlight %}

<p>您可以在通过文本选项找到图像后单击它</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#cf222e">await</span> page<span style="color:#393a34">.</span><span style="color:#8250df">getByAltText</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;playwright logo&#39;</span><span style="color:#393a34">)</span><span style="color:#393a34">.</span><span style="color:#8250df">click</span><span style="color:#393a34">(</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span></span>{% endhighlight %}

<p>2.标题定位</p>

<p>定位具有匹配 title 属性的元素 <a href="https://playwright.dev/docs/api/class-page#page-get-by-title">使用page.getByTitle(text[, options]) </a>。</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#393a34">&lt;</span><span style="color:#22863a">span</span><span style="color:#22863a"> </span><span style="color:#0550ae">title</span><span style="color:#393a34">=</span><span style="color:#393a34">&#39;</span><span style="color:#c6105f">Issues count</span><span style="color:#393a34">&#39;</span><span style="color:#393a34">&gt;</span>25 issues<span style="color:#393a34">&lt;/</span><span style="color:#22863a">span</span><span style="color:#393a34">&gt;</span></span>{% endhighlight %}

<p>您可以在通过标题文本找到它后检查问题数：</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#cf222e">await</span> <span style="color:#8250df">expect</span><span style="color:#393a34">(</span>page<span style="color:#393a34">.</span><span style="color:#8250df">getByTitle</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;Issues count&#39;</span><span style="color:#393a34">)</span><span style="color:#393a34">)</span><span style="color:#393a34">.</span><span style="color:#8250df">toHaveText</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;25 issues&#39;</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span></span>{% endhighlight %}

<p>{% highlight %}<span style="color:#393a34"><span style="color:#393a34">3，测试id进行定位</span></span>{% endhighlight %}</p>

<p>通过测试 ID 进行测试是最具弹性的测试方式，因为即使您的文本或属性角色发生变化，测试仍会通过。 QA 和开发人员应该定义明确的测试 ID 并使用 <a href="https://playwright.dev/docs/api/class-page#page-get-by-test-id">page.getByTestId(testId) </a>查询它们。 但是，通过测试 ID 进行的测试不是面向用户的。 如果角色或文本值对您很重要，那么请考虑使用面向用户的定位器，例如 <a href="https://playwright.dev/docs/locators#locate-by-role">角色 </a>定位器和 <a href="https://playwright.dev/docs/locators#locate-by-text">文本定位器 </a>。</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#393a34">&lt;</span><span style="color:#22863a">button</span><span style="color:#22863a"> </span><span style="color:#0550ae">data-testid</span><span style="color:#393a34">=</span><span style="color:#393a34">&quot;</span><span style="color:#c6105f">directions</span><span style="color:#393a34">&quot;</span><span style="color:#393a34">&gt;</span>Itin&eacute;raire<span style="color:#393a34">&lt;/</span><span style="color:#22863a">button</span><span style="color:#393a34">&gt;</span></span>{% endhighlight %}

<p>您可以通过它的测试 ID 找到该元素：</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#cf222e">await</span> page<span style="color:#393a34">.</span><span style="color:#8250df">getByTestId</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;directions&#39;</span><span style="color:#393a34">)</span><span style="color:#393a34">.</span><span style="color:#8250df">click</span><span style="color:#393a34">(</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span></span>{% endhighlight %}

<p>当您选择使用测试 ID 方法或无法通过 <a href="https://playwright.dev/docs/locators#locate-by-role">角色 </a>或 <a href="https://playwright.dev/docs/locators#locate-by-text">文本 </a>定位时，您也可以使用测试 ID</p>

<p>(2)设置自定义的测试ID</p>

<p>默认情况下， <a href="https://playwright.dev/docs/api/class-page#page-get-by-test-id"> page.getByTestId(testId) </a>将根据 {% highlight %}data-testid{% endhighlight %}属性，但您可以在测试配置中或通过调用 <a href="https://playwright.dev/docs/api/class-selectors#selectors-set-test-id-attribute">selectors.setTestIdAttribute(attributeName) </a>来配置它。</p>

<p>设置测试 ID 以使用自定义数据属性进行测试。</p>

<p>js代码：</p>

<p>{% highlight %}// playwright.config.js<br />
// @ts-check{% endhighlight %}</p>

{% highlight %}
{% highlight %}/** @type {import(&#39;@playwright/test&#39;).PlaywrightTestConfig} */

const config = {

&nbsp; use: {

&nbsp;&nbsp;&nbsp; testIdAttribute: &#39;data-pw&#39;

&nbsp; },

};

module.exports = config;{% endhighlight %}

<p>在您的 html 中，您现在可以使用 {% highlight %}data-pw{% endhighlight %}作为您的测试 ID 而不是默认 ID {% highlight %}data-testid{% endhighlight %}.</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#393a34">&lt;</span><span style="color:#22863a">button</span><span style="color:#22863a"> </span><span style="color:#0550ae">data-pw</span><span style="color:#393a34">=</span><span style="color:#393a34">&quot;</span><span style="color:#c6105f">directions</span><span style="color:#393a34">&quot;</span><span style="color:#393a34">&gt;</span>Itin&eacute;raire<span style="color:#393a34">&lt;/</span><span style="color:#22863a">button</span><span style="color:#393a34">&gt;</span></span>{% endhighlight %}

<p>然后像往常一样定位元素：</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#cf222e">await</span> page<span style="color:#393a34">.</span><span style="color:#8250df">getByTestId</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;directions&#39;</span><span style="color:#393a34">)</span><span style="color:#393a34">.</span><span style="color:#8250df">click</span><span style="color:#393a34">(</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span></span>{% endhighlight %}

<p>4.通过css xpath定位</p>

<p>如果您绝对必须使用 CSS 或 XPath 定位器，则可以使用 <a href="https://playwright.dev/docs/api/class-page#page-locator">page.locator(selector[, options]) </a>创建一个定位器，该定位器采用 <a href="https://playwright.dev/docs/selectors">的选择器 </a>描述如何在页面中查找元素 。 Playwright 支持 CSS 和 XPath 选择器，并在您省略时自动检测它们 {% highlight %}css={% endhighlight %}或者 {% highlight %}xpath={% endhighlight %}字首。</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#cf222e">await</span> page<span style="color:#393a34">.</span><span style="color:#8250df">locator</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;css=button&#39;</span><span style="color:#393a34">)</span><span style="color:#393a34">.</span><span style="color:#8250df">click</span><span style="color:#393a34">(</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span>
</span><span style="color:#393a34"><span style="color:#cf222e">await</span> page<span style="color:#393a34">.</span><span style="color:#8250df">locator</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;xpath=//button&#39;</span><span style="color:#393a34">)</span><span style="color:#393a34">.</span><span style="color:#8250df">click</span><span style="color:#393a34">(</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span>
</span>
<span style="color:#393a34"><span style="color:#cf222e">await</span> page<span style="color:#393a34">.</span><span style="color:#8250df">locator</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;button&#39;</span><span style="color:#393a34">)</span><span style="color:#393a34">.</span><span style="color:#8250df">click</span><span style="color:#393a34">(</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span>
</span><span style="color:#393a34"><span style="color:#cf222e">await</span> page<span style="color:#393a34">.</span><span style="color:#8250df">locator</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;//button&#39;</span><span style="color:#393a34">)</span><span style="color:#393a34">.</span><span style="color:#8250df">click</span><span style="color:#393a34">(</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span></span>{% endhighlight %}

<p>XPath 和 CSS 选择器可以绑定到 DOM 结构或实现。 当 DOM 结构发生变化时，这些选择器可能会中断。 的示例： <strong>的不良做法 </strong> 下面的长 CSS 或 XPath 链是导致测试不稳定</p>

{% highlight %}
{% highlight %}<span style="color:#393a34"><span style="color:#cf222e">await</span> page<span style="color:#393a34">.</span><span style="color:#8250df">locator</span><span style="color:#393a34">(</span>
</span><span style="color:#393a34">    <span style="color:#c6105f">&#39;#tsf &gt; div:nth-child(2) &gt; div.A8SBwf &gt; div.RNNXgb &gt; div &gt; div.a4bIc &gt; input&#39;</span>
</span><span style="color:#393a34"><span style="color:#393a34">)</span><span style="color:#393a34">.</span><span style="color:#8250df">click</span><span style="color:#393a34">(</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span>
</span>
<span style="color:#393a34"><span style="color:#cf222e">await</span> page
</span><span style="color:#393a34">    <span style="color:#393a34">.</span><span style="color:#8250df">locator</span><span style="color:#393a34">(</span><span style="color:#c6105f">&#39;//*[@id=&quot;tsf&quot;]/div[2]/div[1]/div[1]/div/div[2]/input&#39;</span><span style="color:#393a34">)</span>
</span><span style="color:#393a34">    <span style="color:#393a34">.</span><span style="color:#8250df">click</span><span style="color:#393a34">(</span><span style="color:#393a34">)</span><span style="color:#393a34">;</span></span>{% endhighlight %}

<div class="admonitionContent_S0QG">
<p>不推荐使用 CSS 和 XPath，因为 DOM 经常会发生变化，从而导致非弹性测试。 相反，尝试提出一个接近用户如何感知页面的定位器，例如 <a href="https://playwright.dev/docs/locators#locate-by-role">角色定位器 </a>，或者 <a href="https://playwright.dev/docs/locators#locate-by-testid">定义一个明确的测试合同。 </a>使用测试 ID</p>

<p>&nbsp;</p>
</div>

