---
layout: post
title: "gin - 自定义日志文件"
date: "2022-10-25"
categories: 
---
<p><a href="https://gin-gonic.com/docs/examples/custom-log-format/">https://gin-gonic.com/docs/examples/custom-log-format/</a></p>

<p>1. 设置时间：示例：</p>

<div class="highlight">
<pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<code class="language-go" data-lang="go"><span style="color:#204a87;font-weight:700">func</span> <span style="color:#000">main</span><span style="color:#000;font-weight:700">()</span> <span style="color:#000;font-weight:700">{</span>
	<span style="color:#000">router</span> <span style="color:#ce5c00;font-weight:700">:=</span> <span style="color:#000">gin</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">New</span><span style="color:#000;font-weight:700">()</span>
	<span style="color:#8f5902;font-style:italic">// LoggerWithFormatter middleware will write the logs to gin.DefaultWriter
</span>	<span style="color:#8f5902;font-style:italic">// By default gin.DefaultWriter = os.Stdout
</span>	<span style="color:#000">router</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Use</span><span style="color:#000;font-weight:700">(</span><span style="color:#000">gin</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">LoggerWithFormatter</span><span style="color:#000;font-weight:700">(</span><span style="color:#204a87;font-weight:700">func</span><span style="color:#000;font-weight:700">(</span><span style="color:#000">param</span> <span style="color:#000">gin</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">LogFormatterParams</span><span style="color:#000;font-weight:700">)</span> <span style="color:#204a87;font-weight:700">string</span> <span style="color:#000;font-weight:700">{</span>
		<span style="color:#8f5902;font-style:italic">// your custom format
</span>		<span style="color:#204a87;font-weight:700">return</span> <span style="color:#000">fmt</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Sprintf</span><span style="color:#000;font-weight:700">(</span><span style="color:#4e9a06">&quot;%s - [%s] \&quot;%s %s %s %d %s \&quot;%s\&quot; %s\&quot;\n&quot;</span><span style="color:#000;font-weight:700">,</span>
				<span style="color:#000">param</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">ClientIP</span><span style="color:#000;font-weight:700">,</span>
				<span style="color:#000">param</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">TimeStamp</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Format</span><span style="color:#000;font-weight:700">(</span><span style="color:#000">time</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">RFC1123</span><span style="color:#000;font-weight:700">),</span>
				<span style="color:#000">param</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Method</span><span style="color:#000;font-weight:700">,</span>
				<span style="color:#000">param</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Path</span><span style="color:#000;font-weight:700">,</span>
				<span style="color:#000">param</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Request</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Proto</span><span style="color:#000;font-weight:700">,</span>
				<span style="color:#000">param</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">StatusCode</span><span style="color:#000;font-weight:700">,</span>
				<span style="color:#000">param</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Latency</span><span style="color:#000;font-weight:700">,</span>
				<span style="color:#000">param</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Request</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">UserAgent</span><span style="color:#000;font-weight:700">(),</span>
				<span style="color:#000">param</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">ErrorMessage</span><span style="color:#000;font-weight:700">,</span>
		<span style="color:#000;font-weight:700">)</span>
	<span style="color:#000;font-weight:700">}))</span>
	<span style="color:#000">router</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Use</span><span style="color:#000;font-weight:700">(</span><span style="color:#000">gin</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Recovery</span><span style="color:#000;font-weight:700">())</span>
	<span style="color:#000">router</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">GET</span><span style="color:#000;font-weight:700">(</span><span style="color:#4e9a06">&quot;/ping&quot;</span><span style="color:#000;font-weight:700">,</span> <span style="color:#204a87;font-weight:700">func</span><span style="color:#000;font-weight:700">(</span><span style="color:#000">c</span> <span style="color:#ce5c00;font-weight:700">*</span><span style="color:#000">gin</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Context</span><span style="color:#000;font-weight:700">)</span> <span style="color:#000;font-weight:700">{</span>
		<span style="color:#000">c</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">String</span><span style="color:#000;font-weight:700">(</span><span style="color:#0000cf;font-weight:700">200</span><span style="color:#000;font-weight:700">,</span> <span style="color:#4e9a06">&quot;pong&quot;</span><span style="color:#000;font-weight:700">)</span>
	<span style="color:#000;font-weight:700">})</span>
	<span style="color:#000">router</span><span style="color:#000;font-weight:700">.</span><span style="color:#000">Run</span><span style="color:#000;font-weight:700">(</span><span style="color:#4e9a06">&quot;:8080&quot;</span><span style="color:#000;font-weight:700">)</span>
<span style="color:#000;font-weight:700">}</span>
{% endhighlight %}

<p>使用时需要引入包：</p>

{% highlight %}
{% highlight %}import (

&nbsp; &quot;github.com/gin-gonic/gin&quot;

&nbsp; &quot;fmt&quot;

&nbsp; &quot;time&quot;

){% endhighlight %}

<p>{% highlight %}不然会报错：{% endhighlight %}<img height="122" src="/uploads/ckeditor/pictures/630/image-20221025100929-1.png" width="704" /></p>

<p>设置好后，刷新页面就会在log显示时间：</p>

<p><img height="260" src="/uploads/ckeditor/pictures/631/image-20221025100956-2.png" width="1699" /></p>

<p>2.设置log文件：</p>

<p><a href="https://dev.to/gholami1313/saving-log-messages-to-a-custom-log-file-in-golang-ce5">https://dev.to/gholami1313/saving-log-messages-to-a-custom-log-file-in-golang-ce5</a></p>

<p>2.1：引入</p>

<pre class="highlight go">
{% highlight %}<span class="k">import</span> <span class="p">(</span>
    <span class="s">&quot;log&quot;</span>
    <span class="s">&quot;log/syslog&quot;</span>
    <span class="s">&quot;os&quot;</span>
<span class="p">)</span>
{% endhighlight %}

<p>{% highlight %}增加log设置：{% endhighlight %}</p>

<pre class="highlight go">
{% highlight %}<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="c">// log to custom file</span>
    <span class="n">LOG_FILE</span> <span class="o">:=</span> <span class="s">&quot;/tmp/myapp_log&quot;</span>
    <span class="c">// open log file</span>
    <span class="n">logFile</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">os</span><span class="o">.</span><span class="n">OpenFile</span><span class="p">(</span><span class="n">LOG_FILE</span><span class="p">,</span> <span class="n">os</span><span class="o">.</span><span class="n">O_APPEND</span><span class="o">|</span><span class="n">os</span><span class="o">.</span><span class="n">O_RDWR</span><span class="o">|</span><span class="n">os</span><span class="o">.</span><span class="n">O_CREATE</span><span class="p">,</span> <span class="m">0644</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">log</span><span class="o">.</span><span class="n">Panic</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="k">defer</span> <span class="n">logFile</span><span class="o">.</span><span class="n">Close</span><span class="p">()</span>

    <span class="c">// Set log out put and enjoy :)</span>
    <span class="n">log</span><span class="o">.</span><span class="n">SetOutput</span><span class="p">(</span><span class="n">logFile</span><span class="p">)</span>

    <span class="c">// optional: log date-time, filename, and line number</span>
    <span class="n">log</span><span class="o">.</span><span class="n">SetFlags</span><span class="p">(</span><span class="n">log</span><span class="o">.</span><span class="n">Lshortfile</span> <span class="o">|</span> <span class="n">log</span><span class="o">.</span><span class="n">LstdFlags</span><span class="p">)</span>

    <span class="n">log</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">&quot;Logging to custom file&quot;</span><span class="p">)</span>
<span class="p">}</span>{% endhighlight %}

<p>{% highlight %}<span class="p">运行：</span>{% endhighlight %}</p>

<pre class="highlight shell">
{% highlight %}<span class="nb">tail</span> <span class="nt">-f</span> /tmp/myapp_log{% endhighlight %}

<p><img height="74" src="/uploads/ckeditor/pictures/632/image-20221025101653-1.png" width="767" /></p>

<p>&nbsp;</p>
</div>

