---
layout: post
title: "git stash 隐藏当前工作现场提交"
date: "2022-06-09"
categories: 
---
<p id="22-git-stash-相关命令">git stash 相关命令</p>

<table>
	<thead>
		<tr>
			<th>命令名</th>
			<th>作用</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>git stash</td>
			<td>隐藏当前的工作现场, 此时, git status的结果是 clean</td>
		</tr>
		<tr>
			<td>git stash list</td>
			<td>查看所有隐藏, 每一行的冒号前面的字符串就是标识此隐藏的id</td>
		</tr>
		<tr>
			<td>git stash apply</td>
			<td>重新显示标识为 id 的隐藏</td>
		</tr>
		<tr>
			<td>git stash drop</td>
			<td>git apply恢复隐藏后, 需要手动删除 list 列表中的记录</td>
		</tr>
		<tr>
			<td>git stash pop</td>
			<td>恢复最新的进度到工作区</td>
		</tr>
		<tr>
			<td>git stash pop stash@[stash_id]</td>
			<td>恢复指定的进度到工作区</td>
		</tr>
	</tbody>
</table>

<h5 id="三、git-stash-使用场景">git stash 使用场景</h5>

<p id="31-有人与我改动同一分支">有人与我改动同一分支</p>

<blockquote>
<p>我在本地修改好后，发现远程分支已经被改动了，此时我本地也被改动了就造成了冲突，无法&nbsp;<code>push</code>&nbsp;或者&nbsp;<code>pull</code>。</p>
</blockquote>

<p>此时，就可以用&nbsp;<code>git stash</code>&nbsp;来处理</p>

<pre>
<code>// 把本地的改动暂存起来
git stash 
// 拉取远程分支（此时本地分支会回滚到上次commit的情况，你的改动都存在stash中）
git pull  
// 将stash中改动重新加回本地分支，就可以继续修改了，当然，如果改好了就是add,commit,push
git stash pop 
</code></pre>

<p id="32-不小心改动了其他分支">不小心改动了其他分支</p>

<blockquote>
<p>例如忘记切换，将代码写错了分支，直接在&nbsp;<code>master</code>&nbsp;分支上做改动，这里假设我的分支是&nbsp;<code>feature/category_vechice</code>&nbsp;分支。</p>
</blockquote>

<pre>
<code>// 把本地当前改动暂存起来，此时master分支就恢复到了上次拉取时的状态
git stash
// 切换到需要改动的分支
git checkout test
// 将改动pop到自己当前的分支
git stash pop
</code></pre>

<blockquote>
<p>git status&nbsp;</p>

<p>查看修改文件</p>

<p>git diff</p>

<p>查看改动</p>

<p>git stash save &quot;版本做到一半，去修改原来版本的swagger&quot;</p>

<p>提交修改内容</p>

<p>git status</p>

<p>再次查看修改的文件</p>

<p>git stash list</p>

<p>查看所有隐藏,</p>

<p>git add .</p>

<p>增加改动的所有文件</p>

<p>git status</p>

<p>再次查看是否暂存</p>

<p>git stash save &quot;版本做到一半，去修改原来版本的swagger,新增两个新文件&quot;</p>

<p>进行保存</p>
</blockquote>

<p>&nbsp;</p>

