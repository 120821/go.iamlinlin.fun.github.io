---
layout: post
title: "vim的使用--必须记住的快捷键"
date: "2022-06-09"
categories: 
---
<p id="不适合指法不好的同学。">vim不适合指法不好的同学。</p>

<p>Vim的每个键都是需要盲打的。 所以，指法不好，就赶紧提高自己的指法。否则很难的。</p>

<p>安装：</p>

<blockquote>
<p id="ubuntu：">Ubuntu：</p>

<p><code>$ apt-get install vim</code></p>

<p id="mac">Mac:</p>

<ul>
	<li>安装 Homebrew: <a href="http://brew.sh" title="The Missing Package Manager for macOS (or Linux) — Homebrew">The Missing Package Manager for macOS (or Linux) &mdash; Homebrew</a></li>
	<li><code>$ brew update</code></li>
	<li><code>$ brew install vim &amp;&amp; brew install macvim</code></li>
</ul>
</blockquote>

<p>Vim 中有无数种插件，你可以随意安装使用。 可以在 <a href="http://www.vim.org/scripts/" title="scripts : vim online">scripts : vim online</a> 搜索到，也可以直接google。</p>

<pre>
<code>$ git clone https://github.com/sg552/my_vim.git
# 下载完毕后，把这两个文件copy到 home 目录就可以了。
$ cp .vimrc ~
$ cp .vim ~ -r
$ vim
:BundleInstall{% endhighlight %}

<blockquote>
<p id="rails插件">Rails插件</p>

<p>Rails插件允许我们快速的在各种文件中跳来跳去（相信Vim 也有 Django, Spring， angular, 这样的插件， 有兴趣的朋友可以看看。）</p>

<ul>
	<li>跳转到 controller: <code>ctrl + c</code></li>
	<li>跳转到 model : <code>ctrl + m</code></li>
	<li>跳转到 view : 先移动到对应的action, 再 <code>ctrl + v</code></li>
</ul>
</blockquote>

<blockquote>
<p id="自动补全">自动补全</p>

<p>凡是在 Vim 缓冲区中（近期打开过的文件）的代码，都可以补全。</p>

<ul>
	<li>从上到下选择候选词： <code>ctrl + n</code></li>
	<li>从下到上选择候选词： <code>ctrl + p</code></li>
</ul>
</blockquote>

<blockquote>
<ul>
	<li>左移: 选多行后， <code>&lt;</code> （ <code>shift + ,</code> ）</li>
	<li>右移: 选多行后， <code>&gt;</code> （ <code>shift + .</code> ）</li>
	<li>重复上次操作: <code>.</code></li>
</ul>
</blockquote>

<blockquote>
<p id="粘贴模式">粘贴模式</p>

<p>Vim 正常模式下的粘贴，会导致粘贴的代码一行接一行的缩进。 如果要取消这种缩进的话，就要进入到 &quot;粘贴模式&quot;. （记得在这个模式下，无法使用 <code>ctrl + t</code> 命令来快速打开文件。 ）</p>

<ul>
	<li><code>:set paste</code> 进入到粘贴模式</li>
	<li><code>:set nopaste</code> 取消粘贴模式</li>
</ul>
</blockquote>

<blockquote>三种模式的切换：字母切换输入模式，esc切换导航模式，：切换命令模式。</blockquote>

<blockquote>上下左右&nbsp; hjkl&nbsp;&nbsp;&nbsp; 光标移动&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>shift + v</code>， 然后上下移动。就是选中，</blockquote>

<blockquote>
<ul>
	<li><code>w</code>: 下一个词。 (word)</li>
	<li><code>b</code>: 上一个词。 (backword)</li>
</ul>
</blockquote>

<blockquote>
<p><code>ctrl + f</code>: 向下一屏（f = forward) <code>ctrl + b</code>: 向上一屏（b = backward)</p>

<p>分屏</p>

<ul>
	<li>竖屏分割： <code>vs</code> (vertical split缩写)</li>
	<li>横屏分割： <code>sp</code> (split缩写)</li>
	<li>来回跳换： <code>ctrl + w + w</code> （跳到下一个小窗口）, 或者 <code>ctrl + w + &lt;j/k/h/l&gt;</code> （跳到某个方向的小窗口）</li>
</ul>

<p>多行注释</p>

<ul>
	<li>选中多行 (<code>shift + v</code>)</li>
	<li><code>,cb</code> (逗号 c b 三个键要快速按）</li>
	<li>取消注释： 使用传统的替换即可。</li>
</ul>

<p id="为多行代码格式化">多行代码格式化</p>

<p>多行选中后， 按 <code>=</code> 即可。比如多行缩进对齐。</p>
</blockquote>

<p>&nbsp;</p>

<blockquote>
<p><code>:%s/原来的字符串/新字符串/&nbsp;&nbsp; 查找替换&nbsp;&nbsp;&nbsp; </code>（所有都替换的话，就在末尾加个<code>g</code>&nbsp;&nbsp;&nbsp; <code>:%s/原来的字符串/新字符串/g</code> )&nbsp;&nbsp;&nbsp;</p>

<p>先 <code>shift + v</code> 选中若干行<code>&nbsp;&nbsp;&nbsp;&nbsp; :s/原来的/新的字符串&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 替换</code></p>

<ul>
	<li><code>ctrl + n</code> : 下一个候选</li>
	<li><code>ctrl + p</code> : 上一个候选</li>
</ul>

<ul>
	<li>&nbsp;</li>
</ul>
</blockquote>

<blockquote>
<p>搜索 some_thing: <code>/some_thing</code> 继续搜索下一个： <code>n</code> 搜索前一个： <code>shift + n</code></p>
</blockquote>

<blockquote>
<p id="快速打开文件">快速打开文件</p>

<p>使用的插件： fuzzy find</p>

<p><code>ctrl + t</code>, 就会弹出 <code>&gt;file&gt;</code> 这样的标志，然后输入：<code>**/文件名</code> 即可。 文件名是模糊查询。输入 <code>ab</code>, vim 也会把 <code>aub</code> 的结果列出来</p>

<p>Ctrl&nbsp; + e&nbsp; 打开最近编辑的文件</p>

<p><strong>快速进另一个文件：</strong></p>

<p>在 Rails的 路由或者 视图文件中，很好用。<code>gf</code> 即可。 （gf = go to file)</p>
</blockquote>

<blockquote>
<ul>
	<li>跳到当前行的末尾： <code>shift + 4</code></li>
	<li>跳到当前行的行首： <code>0</code></li>
</ul>
</blockquote>

<blockquote>
<ul>
	<li><code>gg</code>: 第一行</li>
	<li><code>shift + g</code>: 末行。</li>
</ul>
</blockquote>

<blockquote>
<ul>
	<li>跳到 上一次编辑的地方： <code>g;</code></li>
	<li>跳到 下一次编辑的地方： <code>g,</code></li>
</ul>

<ul>
	<li>快速返回上一次编辑的文件： <code>ctrl + o</code> ( o 意为 outer )</li>
	<li>快速返回下一次编辑的文件： <code>ctrl + i</code> ( i 意为 inner )</li>
	<li>shift+8 跳到光标位置相同的标签或者单词处</li>
</ul>
</blockquote>

<blockquote>
<p id="输入文本">输入文本</p>

<ul>
	<li>在光标前输入： <code>i</code> ( insert )</li>
	<li>在光标后输入： <code>a</code> (append / after )</li>
	<li>在行首增加内容： <code>shift + i</code></li>
	<li>在行末增加内容： <code>shift + a</code></li>
	<li>在光标下行增加内容： <code>o</code></li>
	<li>在光标上行增加内容： <code>shift + o</code></li>
</ul>
</blockquote>

<blockquote>
<p>删除</p>

<p>以下删除都以当前光标作为起始位置。</p>

<p>&nbsp;&nbsp;&nbsp; 删掉一个字母：x<br />
&nbsp;&nbsp;&nbsp; 删掉一个单词： dw<br />
&nbsp;&nbsp;&nbsp; 删掉一行： dd<br />
&nbsp;&nbsp;&nbsp; 删掉多行： shift +v, 然后 x 或者 d</p>
</blockquote>

<blockquote>
<ul>
	<li>复制一个单词： <code>yw</code></li>
	<li>复制当前行： <code>yy</code></li>
	<li>粘贴: <code>p</code></li>
	<li><code>，a查看历史复制的内容，enter选中粘贴的内容</code></li>
</ul>
</blockquote>

<blockquote>
<p id="针对多个文件进行-查找和替换">针对多个文件进行 查找和替换</p>

<p>使用插件： Greplace</p>

<ol>
	<li><code>Gsearch -F &#39;要替换的字符串&#39; . -R --include=*rb</code> 这里的 <code>-F</code>, <code>-R --include=*rb</code> 这些参数，跟<code>grep</code>中的一样。</li>
	<li>在返回的结果中，把该替换的替换。</li>
	<li><code>Greplace</code> 然后选择 <code>y/a/n</code> 来决定是否替换。</li>
	<li>最后， 输入 <code>wa</code> 保存所有文件的改动。</li>
</ol>

<h2>&nbsp;</h2>
</blockquote>

<blockquote>
<p>切换背景色</p>

<ul>
	<li><code>:set background=dark</code> 深色背景色</li>
	<li><code>:set background=light</code> 亮色&nbsp;</li>
</ul>
</blockquote>

<blockquote>
<p id="显示隐藏行数">显示/隐藏行数</p>

<ul>
	<li><code>:set number</code> 显示行数</li>
	<li><code>:set nonumber</code> 取消行数</li>
</ul>
</blockquote>

<blockquote>
<p id="折叠取消折叠过长的行">折叠/取消折叠过长的行</p>

<ul>
	<li><code>:set wrap</code> 折叠</li>
	<li><code>:set nowrap</code> 取消折叠</li>
</ul>
</blockquote>

<blockquote>
<ul>
	<li><code>:set paste</code> 进入到粘贴模式</li>
	<li><code>:set nopaste</code> 取消粘贴模式</li>
</ul>
</blockquote>

