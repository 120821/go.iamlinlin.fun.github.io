---
layout: post
title: "rails 图片预览"
date: "2023-06-09"
categories: 
---
<p>假设你已经有了一个表单用于上传这些图片，这里假设表单中包含了5个input标签用于上传不同的图片，分别对应上述提到的5个图片。</p>

<p>在你的表单中，每个input标签都应该具有一个唯一的ID，便于后续操作。比如，给这五个input分别设置ID为：</p>

<pre>
<code>&lt;input type=&quot;file&quot; id=&quot;food_distribution_license&quot; name=&quot;food_distribution_license&quot;&gt;
&lt;input type=&quot;file&quot; id=&quot;legal_person_image&quot; name=&quot;legal_person_image&quot;&gt;
&lt;input type=&quot;file&quot; id=&quot;business_processing_license&quot; name=&quot;business_processing_license&quot;&gt;
&lt;input type=&quot;file&quot; id=&quot;business_license&quot; name=&quot;business_license&quot;&gt;</code></pre>

<p>接下来，在你的页面中添加一个预览图片的区域，用于在用户上传图片但是未提交表单时，预览用户已经选择的图片。这里我们使用一个普通的div标签来作为图片预览区域：</p>

<pre>
<code>&lt;div id=&quot;preview-container&quot;&gt;&lt;/div&gt;</code></pre>

<p>接下来，使用JavaScript来将用户上传的图片预览在页面上。假设你已经开始写了一个函数来立即加载这些图片：</p>

<pre>
<code>$(document).ready(function() {
  // code to load images
});</code></pre>

<p>我们来编写所需的JavaScript代码，实现在预览区域内展示用户选择的已上传但是未提交的图片：</p>

<pre>
<code>$(document).ready(function() {
  // code to load images
  function readURL(input, id) {
    if (input.files &amp;&amp; input.files[0]) {
      var reader = new FileReader();

      reader.onload = function (e) {
        $(&#39;#preview-container&#39;).append(&#39;&lt;img id=&quot;&#39; + id +&#39;&quot; src=&quot;&#39; + e.target.result + &#39;&quot; /&gt;&#39;);
      }

      reader.readAsDataURL(input.files[0]);
    }
  }

  // 预览食品经营许可证
  $(&#39;#food_distribution_license&#39;).change(function() {
    readURL(this, &#39;preview-food-distribution-license&#39;);
  });

  // 预览法人身份证
  $(&#39;#legal_person_image&#39;).change(function() {
    readURL(this, &#39;preview-legal-person-image&#39;);
  });

  // 预览食品加工许可证
  $(&#39;#business_processing_license&#39;).change(function() {
    readURL(this, &#39;preview-business-processing-license&#39;);
  });

  // 预览营业执照
  $(&#39;#business_license&#39;).change(function() {
    readURL(this, &#39;preview-business-license&#39;);
  });
});</code></pre>

<p>在这个代码片段中，我们定义了一个名为readURL的函数，用于从输入框中读取文件，并将其添加到预览区域中。当用户上传一个新文件时，我们调用这个函数，并通过ID参数来为该文件创建一个唯一的ID。在函数内部，我们使用FileReader来读取文件内容，并将它显示到页面上。最后，我们将预览图像添加到指定的预览容器内。</p>

<p>另外，我们还绑定了四个事件，在对应的input元素元素发生变化时，立即调用readURL函数，将预览图像添加到预览容器中。</p>

<p>这样，当用户上传但是没有提交表单时，预览图片的区域就会显示用户已经选择的图片。如果用户最终提交了表单，那么所欲上传的图片也会被保存到指定的位置上。</p>

