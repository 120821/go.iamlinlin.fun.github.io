---
layout: post
title: "vim 多行的末尾/行首都增加逗号"
date: "2023-04-25"
categories: 
---
<p>1.行尾增加：</p>
<p>可以使用以下命令：</p>
<ol>
<li>进入vim编辑模式</li>
<li>输入{% highlight html %}:set nu{% endhighlight %}以显示行号</li>
<li>移动光标到需要修改的行开头（例如第6行），输入{% highlight html %}6G{% endhighlight %}或者{% highlight html %}6gg{% endhighlight %}跳转到该行</li>
<li>进入行末，输入{% highlight html %}${% endhighlight %}跳转到行末</li>
<li>输入{% highlight html %}A,{% endhighlight %}进入编辑模式，在行末增加逗号并跳出编辑模式</li>
<li>使用键盘上箭头键或者{% highlight html %}k{% endhighlight %}命令移动光标到下一行（例如第7行）</li>
<li>重复步骤4-6，直到修改完所有需要修改的行</li>
<li>输入{% highlight html %}:wq{% endhighlight %}保存并退出vim编辑器</li>
</ol>
<p>如果想要同时修改多行，可以使用以下命令：</p>
<ol>
<li>进入vim编辑模式，输入{% highlight html %}:%s/$/,/{% endhighlight %}，并按下回车键</li>
<li>所有行末都会增加逗号</li>
<li>输入{% highlight html %}:wq{% endhighlight %}保存并退出vim编辑器</li>
</ol>
<p>2.使用vim 怎么在一些行的行首非空字符前都增加逗号</p>
<div id="rtf11975">
<div>
<p>可以使用以下命令在一些行的行首非空字符前都增加逗号：</p>
<ol>
<li>打开需要编辑的文件，并进入vim编辑模式</li>
<li>输入{% highlight html %}:set nu{% endhighlight %}命令以显示行号</li>
<li>移动光标到需要编辑的第一行的开头（例如第6行），输入{% highlight html %}6G{% endhighlight %}或{% highlight html %}6gg{% endhighlight %}跳转到该行</li>
<li>输入{% highlight html %}0{% endhighlight %}或{% highlight html %}^{% endhighlight %}跳转到行首</li>
<li>进入编辑模式，输入{% highlight html %}I,{% endhighlight %}，并按下{% highlight html %}Esc{% endhighlight %}键，该行的行首前会增加一个逗号</li>
<li>使用键盘上箭头键或{% highlight html %}k{% endhighlight %}命令移动光标到需要编辑的下一行（例如第7行）</li>
<li>重复步骤4-5，直到修改完所有需要修改的行</li>
<li>输入{% highlight html %}:wq{% endhighlight %}保存并退出vim编辑器</li>
</ol>
<p>如果想要修改所有行的行首非空字符前都增加逗号，则可以使用以下命令：</p>
<ol>
<li>进入vim编辑模式，输入{% highlight html %}:set nu{% endhighlight %}以显示行号</li>
<li>输入{% highlight html %}:%s/\S/,&amp;/g{% endhighlight %}并按下回车键来替换所有非空字符的行首为一个逗号加上该行首的字符（{% highlight html %}&amp;{% endhighlight %}表示字符串匹配的整个字符串）</li>
<li>输入{% highlight html %}:wq{% endhighlight %}保存并退出vim编辑器</li>
</ol>
<p>这个命令将会将每一行第一个非空字符前增加一个逗号。</p>
<p>3.使用vim 怎么在多行的行首非空字符前都增加逗号</p>
<div id="rtf11989">
<div>
<p>可以使用以下命令在多行的行首非空字符前都增加逗号：</p>
<ol>
<li>打开需要编辑的文件，并进入vim编辑模式</li>
<li>输入{% highlight html %}:set nu{% endhighlight %}命令以显示行号</li>
<li>移动光标到需要编辑的第一行的开头（例如第6行），输入{% highlight html %}6G{% endhighlight %}或{% highlight html %}6gg{% endhighlight %}跳转到该行</li>
<li>输入{% highlight html %}0{% endhighlight %}或{% highlight html %}^{% endhighlight %}跳转到行首</li>
<li>进入编辑模式，输入{% highlight html %}I,{% endhighlight %}，并按下{% highlight html %}Esc{% endhighlight %}键，该行的行首前会增加一个逗号</li>
<li>使用键盘上箭头键或{% highlight html %}k{% endhighlight %}命令移动光标到需要编辑的下一行（例如第7行）</li>
<li>输入{% highlight html %}0{% endhighlight %}或{% highlight html %}^{% endhighlight %}跳转到行首</li>
<li>进入编辑模式，输入{% highlight html %}I,{% endhighlight %}，并按下{% highlight html %}Esc{% endhighlight %}键，该行的行首前会增加一个逗号</li>
<li>重复步骤6-8，直到修改完所有需要修改的行</li>
<li>输入{% highlight html %}:wq{% endhighlight %}保存并退出vim编辑器</li>
</ol>
<p>如果想要修改所有行的行首非空字符前都增加逗号，则可以使用以下命令：</p>
<ol>
<li>进入vim编辑模式，输入{% highlight html %}:set nu{% endhighlight %}以显示行号</li>
<li>移动光标到需要编辑的第一行的开头（例如第6行），输入{% highlight html %}6G{% endhighlight %}或{% highlight html %}6gg{% endhighlight %}跳转到该行</li>
<li>输入{% highlight html %}0{% endhighlight %}或{% highlight html %}^{% endhighlight %}跳转到行首</li>
<li>运行以下命令：{% highlight html %}:%s/\S/,&amp;/g{% endhighlight %}，并按下回车键来替换所有非空字符的行首为一个逗号加上该行首的字符（{% highlight html %}&amp;{% endhighlight %}表示字符串匹配的整个字符串）</li>
<li>输入{% highlight html %}:wq{% endhighlight %}保存并退出vim编辑器</li>
</ol>
<p>这个命令将会将每一行第一个非空字符前增加一个逗号。</p>
<p>4.在本地使用git 切换到远程的分支</p>
<p>要从本地 Git 仓库中切换到远程分支，可以使用 {% highlight html %}git checkout{% endhighlight %} 命令加上远程分支的名称。</p>
<p>具体步骤如下：</p>
<ol>
<li>
<p>首先使用 {% highlight html %}git branch -r{% endhighlight %} 命令查看远程 Git 仓库中的所有分支。</p>
</li>
<li>
<p>找到需要切换到的远程分支，以 {% highlight html %}origin/branch-name{% endhighlight %} 的形式展示。</p>
</li>
<li>
<p>基于远程分支创建一个本地分支，运行命令 {% highlight html %}git checkout -b local-branch-name origin/remote-branch-name{% endhighlight %}。其中 {% highlight html %}local-branch-name{% endhighlight %} 是你将为要拉取的分支创建的分支的名称，{% highlight html %}remote-branch-name{% endhighlight %} 是要在本地创建分支的远程分支的名称。</p>
</li>
<li>
<p>执行上述命令后，本地分支就已经成功创建并切换到。可以使用 {% highlight html %}git branch{% endhighlight %} 命令检查一下。</p>
</li>
</ol>
<p>至此，就成功从本地 Git 仓库上切换到了远程分支。</p>
<p>注意：如果你需要将远程分支上的代码更新到本地分支，请先使用 {% highlight html %}git fetch{% endhighlight %} 命令更新远程分支上的代码。例如，使用 {% highlight html %}git fetch origin{% endhighlight %} 将远程仓库的所有分支都更新到本地。然后运行 {% highlight html %}git merge{% endhighlight %} 或 {% highlight html %}git rebase{% endhighlight %} 引入这些更新到你的本地分支中，例如，使用 {% highlight html %}git merge origin/&lt;remote-branch-name&gt;{% endhighlight %}。</p>
<p>&nbsp;</p>
</div>
</div>
<p>&nbsp;</p>
</div>
</div>
