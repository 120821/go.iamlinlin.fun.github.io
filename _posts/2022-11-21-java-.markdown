---
layout: post
title: "Java - 封装 "
date: "2022-11-21"
categories: 
---
<p><a href="https://blog.csdn.net/qq_49190652/article/details/124596001">CSDN 文章</a></p>

<p>面向对象的三个基本特征：封装。继承。多态。</p>

<p>1.封装<br />
（1）封装是实现面向对象的第一步，封装就是将数据或函数等集合在一个单元中（类）。被封装的对象通常被称为抽象数据类型。</p>

<p>（2）类具有封装性，类能够把数据和算法（操作数据的函数）组合在一起，构成一个不可分割的整体；</p>

<p>（3）类具有信息隐藏的能力，它能够有效地把类的内部数据（即私有和受保护成员）隐藏起来，使外部函数只能通过类的公有成员才能访问类的内部数据，并且控制访问级别。</p>

<p>封装使类成为一个具有内部数据的自我隐藏能力、功能独立的软件模块</p>

<p>1）封装的意义</p>

<p>a)保护或防止代码（数据）在无意中被破坏。保护类中的成员，不让类以外的程序直接访问或修改，只能通过提供的公共接口访问（数据封装）</p>

<p>b)隐藏方法（实现）细节，只要接口不变，内容的修改不会影响到外部的调用者（方法封装）</p>

<p>c)封装可以使对象拥有完整的属性和方法（类中的函数）</p>

<p>d)外部不能直接访问对象的属性，只能通过该属性对应的公有方法访问</p>

<p>2）对象封装原则</p>

<p>a）内聚：指一个模块（类）内部各个部分之间的关联程度</p>

<p>b) 耦合：指各个模块（类）之间的关联程度</p>

<p>总结：用类实现封装，用封装来实现高内聚，低耦合<br />
&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />
版权声明：本文为CSDN博主「逍遥@明」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />
原文链接：https://blog.csdn.net/qq_49190652/article/details/124596001</p>

