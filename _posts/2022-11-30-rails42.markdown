---
layout: post
title: "rails 4.2 上传图片"
date: "2022-11-30"
categories: 
---
<p><a href="http://siwei.me/blog/posts/ckeditor-gem">http://siwei.me/blog/posts/ckeditor-gem</a> <a href="https://blog.csdn.net/qq_42589252/article/details/95923516">https://blog.csdn.net/qq_42589252/article/details/95923516</a></p>

<pre>
<code>error：couldn&#39;t find file &#39;ckeditor/init&#39;</code></pre>

<p>解决方法（进行升级CKeditor）</p>

<pre>
<code>gem &#39;ckeditor&#39;, &#39;~&gt; 4.2.4&#39;</code></pre>

<p>增加gem:</p>

<pre>
<code>gem &#39;carrierwave&#39;

gem &#39;mini_magick&#39;

gem &#39;ckeditor&#39;, &#39;~&gt; 4.2.4&#39;</code></pre>

<p>安装</p>

<pre>
<code>bundle</code></pre>

<p>增加文件,并在application.js引用</p>

<pre>
<code>ckeditor/config.js</code></pre>

<p>内容如下：</p>

<pre>
<code>/*
Copyright (c) 2003-2011, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.html or http://ckeditor.com/license
*/

CKEDITOR.editorConfig = function( config )
{
  // Define changes to default configuration here. For example:
  // config.language = &#39;zh-CN&#39;;
  config.height=&#39;600px&#39;;
  // config.uiColor = &#39;#AADC6E&#39;;

  /* Filebrowser routes */
  // The location of an external file browser, that should be launched when &quot;Browse Server&quot; button is pressed.
  config.filebrowserBrowseUrl = &quot;/ckeditor/attachment_files&quot;;

  // The location of an external file browser, that should be launched when &quot;Browse Server&quot; button is pressed in the Flash dialog.
  config.filebrowserFlashBrowseUrl = &quot;/ckeditor/attachment_files&quot;;

  // The location of a script that handles file uploads in the Flash dialog.
  config.filebrowserFlashUploadUrl = &quot;/ckeditor/attachment_files&quot;;

  // The location of an external file browser, that should be launched when &quot;Browse Server&quot; button is pressed in the Link tab of Image dialog.
  config.filebrowserImageBrowseLinkUrl = &quot;/ckeditor/pictures&quot;;

  // The location of an external file browser, that should be launched when &quot;Browse Server&quot; button is pressed in the Image dialog.
  config.filebrowserImageBrowseUrl = &quot;/ckeditor/pictures&quot;;

  // The location of a script that handles file uploads in the Image dialog.
  config.filebrowserImageUploadUrl = &quot;/ckeditor/pictures&quot;;

  // The location of a script that handles file uploads.
  config.filebrowserUploadUrl = &quot;/ckeditor/attachment_files&quot;;

  // Rails CSRF token
  config.filebrowserParams = function(){
    var csrf_token, csrf_param, meta,
        metas = document.getElementsByTagName(&#39;meta&#39;),
        params = new Object();

    for ( var i = 0 ; i &lt; metas.length ; i++ ){
      meta = metas[i];

      switch(meta.name) {
        case &quot;csrf-token&quot;:
          csrf_token = meta.content;
          break;
        case &quot;csrf-param&quot;:
          csrf_param = meta.content;
          break;
        default:
          continue;
      }
    }

    if (csrf_param !== undefined &amp;&amp; csrf_token !== undefined) {
      params[csrf_param] = csrf_token;
    }

    return params;
  };

  config.addQueryString = function( url, params ){
    var queryString = [];

    if ( !params ) {
      return url;
    } else {
      for ( var i in params )
        queryString.push( i + &quot;=&quot; + encodeURIComponent( params[ i ] ) );
    }

    return url + ( ( url.indexOf( &quot;?&quot; ) != -1 ) ? &quot;&amp;&quot; : &quot;?&quot; ) + queryString.join( &quot;&amp;&quot; );
  };

  // Integrate Rails CSRF token into file upload dialogs (link, image, attachment and flash)
  CKEDITOR.on( &#39;dialogDefinition&#39;, function( ev ){
    // Take the dialog name and its definition from the event data.
    var dialogName = ev.data.name;
    var dialogDefinition = ev.data.definition;
    var content, upload;

    if (CKEDITOR.tools.indexOf([&#39;link&#39;, &#39;image&#39;, &#39;attachment&#39;, &#39;flash&#39;], dialogName) &gt; -1) {
      content = (dialogDefinition.getContents(&#39;Upload&#39;) || dialogDefinition.getContents(&#39;upload&#39;));
      upload = (content == null ? null : content.get(&#39;upload&#39;));

      if (upload &amp;&amp; upload.filebrowser &amp;&amp; upload.filebrowser[&#39;params&#39;] === undefined) {
        upload.filebrowser[&#39;params&#39;] = config.filebrowserParams();
        upload.action = config.addQueryString(upload.action, upload.filebrowser[&#39;params&#39;]);
      }
    }
  });
};</code></pre>

<p>编译：</p>

<pre>
<code>rake assets:precompile --trace RAILS_ENV=production</code></pre>

<p>重启：</p>

<pre>
<code>bundle exec rails s -e production</code></pre>

<p>图片就可以上传了，但是存在文件，图片的URL特别长，昨天解决的问题（图片不显示的问题），现在重现了，就是之前记录的图片又都不能正常显示了。</p>

<p>&nbsp;</p>

