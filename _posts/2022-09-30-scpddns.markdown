---
layout: post
title: "scp  部署ddns"
date: "2022-09-30"
categories: 
---
<p><strong>在本地</strong></p>

<p>压缩：linlin@linlin-i5:/workspace/ddns_ruby$ zip -q -r ddns-0930.zip *</p>

<p>传送到远程：scp ddns-0930.zip ubuntu@43.135.52.56:~/ddns_ruby</p>

<p>linlin@linlin-i5:/workspace/caddy$ scp caddy-0930.zip ubuntu@43.135.52.56:~/caddy</p>

<p>linlin@linlin-i5:~/Downloads$ scp docker-compose-linux-aarch64&nbsp; ubuntu@43.135.52.56:/home/ubuntu/opt/app/ddns_ruby</p>

<p>远程到本地（是<strong>在本地执行命令</strong>）：</p>

<p>linlin@linlin-i5:/workspace/ddns_ruby$ scp ubuntu@43.132.234.28:~/caddy/caddy-0930.zip /workspace/caddy/</p>

<p><strong>在远程：</strong></p>

<p>unzip ddns-0930.zip</p>

<p>sudo apt install bundler</p>

<p>bundle install</p>

<p>（<a href="http://siwei.me/blog/posts/docker-docker-docker-compose">Ubuntu）安装：docker ubuntu</a></p>

<pre class="hljs sql">
 2005  sudo apt-get <span class="hljs-operator"><span class="hljs-keyword">update</span>
 <span class="hljs-number">2006</span>  sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-keyword">install</span>     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common
 <span class="hljs-number">2007</span>  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-<span class="hljs-keyword">key</span> <span class="hljs-keyword">add</span> -
 <span class="hljs-number">2008</span>  sudo apt-<span class="hljs-keyword">key</span> fingerprint <span class="hljs-number">0</span>EBFCD88
 <span class="hljs-number">2009</span>  sudo <span class="hljs-keyword">add</span>-apt-repository    <span class="hljs-string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&quot;</span>
 <span class="hljs-number">2010</span>  sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-keyword">update</span>
 <span class="hljs-number">2011</span>  sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-keyword">install</span> docker-ce docker-ce-cli containerd.io
 <span class="hljs-number">2012</span>  sudo docker run hello-world
 <span class="hljs-number">2013</span>  docker run -it ubuntu bash</span>{% endhighlight %}

<p>安装docker-compose:&nbsp;</p>

<p>1. 来到：<a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a>&nbsp; 页面，找到对应的二进制文件下载</p>

<p>2. 把这个二进制文件扔到/usr/local/bin&nbsp;&nbsp;</p>

<p>3. chmod + x /usr/local/bin/docker-compose&nbsp;</p>

<p>或者sudo apt&nbsp; install docker-compose</p>

<p>sudo snap install docker</p>

<p><img height="117" src="/uploads/ckeditor/pictures/505/image-20220930164749-1.png" width="718" /></p>

<p>测试：sudo docker run hello-world</p>

<p>docker run -it ubuntu bash</p>

<p><img height="722" src="/uploads/ckeditor/pictures/506/image-20220930164911-2.png" width="915" /></p>

<p><a href="https://hub.docker.com/_/postgres">安装postgres</a>：</p>

<p>docker pull postgres:14.5-bullseye</p>

<p>docker pull postgres:14.5</p>

<p>这是两个不同的版本,不同版本根据需要进行安装，<a href="https://hub.docker.com/_/postgres/tags">官网</a></p>

<p>使用docker启动postgres：docker run&nbsp; -e POSTGRES_PASSWORD=abdfdd3859a24c -d postgres</p>

<p>可以出现错误，因为安装了两个postgres，停止一个即可</p>

<p>查看所有的进程：sudo docker ps -a</p>

<p><img height="179" src="/uploads/ckeditor/pictures/507/image-20220930165156-3.png" width="1467" /></p>

<p>停止多的postgres：sudo docker stop 389d</p>

<p><img height="218" src="/uploads/ckeditor/pictures/508/image-20220930165227-4.png" width="1467" /></p>

<p>查看postgres的ip：sudo docker inspect 8523（8523是container的id）</p>

<p><img height="395" src="/uploads/ckeditor/pictures/509/image-20220930165331-5.png" width="892" /></p>

<p>ipaddress就是docker启动的postgres的ip</p>

<p>测试进行连接：telnet 172.17.0.3 5432</p>

<p>修改数据库配置</p>

<p>修改localhost： postgres的ip</p>

<p>密码：设置的密码（docker run&nbsp; -e POSTGRES_PASSWORD=abdfdd3859a24c -d postgres 这个命令中设置的）</p>

<p><img height="243" src="/uploads/ckeditor/pictures/510/image-20220930165453-6.png" width="474" /></p>

<p>查看ruby的版本：ruby -v</p>

<p>查看ruby的位置：which ruby</p>

<p><img height="105" src="/uploads/ckeditor/pictures/511/image-20220930165648-7.png" width="1027" /></p>

<p>看出是使用apt install的ruby，应该使用asdf安装的，注意</p>

<p><img height="105" src="/uploads/ckeditor/pictures/512/image-20220930165732-8.png" width="1027" /></p>

<p>安装gem的时候，出现错误，ruby版本不一致，注释继续安装</p>

<p><img height="105" src="/uploads/ckeditor/pictures/514/image-20220930165844-10.png" width="1027" /></p>

<p>安装的时候无法安装gem pg</p>

<p>直达：<a href="http://siwei.me/blog/posts/install-libs-on-bare-linux">安装第三方包</a>，也可以看一下（安装Ubuntu后 <a href="http://siwei.me/blog/posts/ubuntu-14-04-things-to-do-once-a-bare-ubuntu-14-04-setup">bare</a> ）</p>

<p>sudo apt-get install libapr1-dev libxml2-dev libxslt1-dev libmysqlclient-dev git curl build-essential libssl-dev libreadline-dev build-essential libssl-dev libreadline-dev vim libcurl4 ruby-dev zlib1g-dev liblzma-dev ruby-all-dev</p>

<p>&nbsp;</p>

<p>sudo apt-get install libpq-dev（忘记怎么用了哈哈哈无语）</p>

<p><a href="https://github.com/etscrivner/rbsecp256k1">rbsecp256k1 (5.1.0）</a></p>

<p><img height="165" src="/uploads/ckeditor/pictures/515/image-20220930170618-11.png" width="1027" /></p>

<p><strong>解决rbsecp256k1 (5.1.0）安装问题：</strong></p>

<p>Linux：</p>

<p>sudo apt-get install build-essential automake pkg-config libtool \<br />
&nbsp; libffi-dev libssl-dev libgmp-dev python-dev</p>

<p>如果不行的话，根据需要，本次部署这个可以用</p>

<p>sudo apt-get install build-essential automake pkg-config libtool \<br />
&nbsp; libffi-dev libssl-dev libgmp-devpython2-dev</p>

<p><strong>连接数据库</strong>，查看数据：psql -h 172.17.0.3 --username=postgres</p>

<p>\l：查看所有的数据库</p>

<p>\c postgres：切换 使用postgres数据库</p>

<p><img height="425" src="/uploads/ckeditor/pictures/516/image-20220930170638-12.png" width="1047" /></p>

<p>\dt 相当于 show tables</p>

<p><img height="48" src="/uploads/ckeditor/pictures/517/image-20220930170651-13.png" width="360" /><br />
&nbsp;</p>

<p><a href="https://asciiart.website/index.php">增加图片</a></p>

<p>sudo vim /etc/motd</p>

<p>就可以进行编辑内容，登录就显示。</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

