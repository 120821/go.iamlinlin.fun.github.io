---
layout: post
title: "ruby hash :与=>的区别"
date: "2023-05-05"
categories: 
---
<p>在 Ruby 哈希表（Hash）中，使用 `:` 和 `=&gt;` 有一些不同之处：</p>

<p>1. `=&gt;` 作为分隔符用于显示键和值之间的关系。例如，`{ &quot;key&quot; =&gt; &quot;value&quot; }`。`:` 用于表示符号（symbol），它被视为一个不可变的字符串。例如， `{ key: &quot;value&quot; }`。</p>

<p>2. 当使用 `=&gt;` 分隔符时，键可以是任何 Ruby 表达式。例如，`{ $global_variable =&gt; &quot;value&quot; }`，这里 `$global_variable` 是全局变量。然而，使用符号时，键名必须是符号字面量，例如，使用 `:key` 而不是 `variable.to_sym` 或 `&#39;key&#39;.to_sym`。</p>

<p>3. `:` 用于常量或参数名称。当你需要一个不可变的参数或常量时，这非常有用。这个符号可以保存在符号表中并被重用。这将带来更少的垃圾收集和更好的性能。例如，`:max_depth`，其中 `max_depth` 是常量、参数或选项的名称。`=&gt;` 没有这样的特点，因为它只是一个分离器。</p>

<p>总的来说，`:key =&gt; value` 和 `key: value` 是等效的。`:key` 表示一个符号作为键名，可以在您需要一个符号时使用可读性更好的简写形式。如果您需要符号，那么使用 `:` 是一个好选择，但如果您想有一个表达式，那么您只能使用 `=&gt;`。</p>

