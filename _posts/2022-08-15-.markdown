---
layout: post
title: "方法论"
date: "2022-08-15"
categories: 
---
<hr />
<p><strong>实现一个新的复杂的算法:</strong></p>
<p>1.当写一个新的计算方法的时候（算法比较复杂），需要先写<strong>单元测试</strong>，然后实现方法（建议）</p>
<p>2.当实现方法的时候，需要先理清逻辑，如果不清楚那么可以先写注释，然后实现</p>
<p>3.当数据混乱的时候，可以打印日志进行查看，检验。</p>
<p>2023-11-03</p>
<hr />
<p><br />
过程：1. 理解问题，寻找<em>方法</em>；2. 编写程序，描述<em>方法</em>；3. 运行程序，检测是否解决问题。</p>
<p>每次学习新东西，一个知识点不需要超过三小时，时间永远不够的，理想时间是一小时以内（不要同时学习很多知识点，一个一个来。）</p>
<p><strong>编程思维是拆解思维：</strong><span style="color:#121212">编程思维就是&ldquo;理解问题一一找出路径&quot;的思维过程。它可以将一个问题清晰具体地描述出来，将大问题逐步分解成独立的小问题，由复杂变简单，由抽象变具体。</span></p>
{% highlight html %}
1.明确学习目的 
学习编程对大多数IT业人员来说都是非常有用的。学编程，做一名编程人员，从个人角度讲，可以解决在软件使用中所遇到的问题，改进现有软件，可以为自己找到一份理想的工作添加重要得砝码，有利于在求职道路上谋得一个好的职位；从国家的角度，可以为中国的软件产业做出应有的贡献，一名优秀的程序员永远是被争夺的对象。学习编程还能 锻炼思维，使我们的逻辑思维更加严密；能够不断享受到创新的乐趣，将一直有机会走在高科技的前沿，因为程序设计本身是一种创造性的工作。知识经济时代给我们带来了无限的机会，要想真正掌握计算机技术，并在IT行业里干出一番事业来，有所作为，具有一定的编程能力是一个基本条件和要求。 
2.打好基础 
学编程要具备一定的基础，总结之有以下几方面： 
（1）数学基础 从计算机发展和应用的历史来看计算机的数学模型和体系结构等都是有数学家提出的，最早的计算机也是为数值计算而设计的。因此，要学好计算机就要有一定的数学基础，出学者有高中水平就差不多了。 
（2）逻辑思维能力的培养 学程序设计要有一定的逻辑思维能力，&ldquo;逻思力&rdquo;的培养要长时间的实践锻炼。要想成为一名优秀的程序员，最重要的是掌握编程思想。要做到这一点必须在反复的实践、观察、分析、比较、总结中逐渐地积累。因此在学习编程过程中，我们不必等到什么都完全明白了才去动手实践，只要明白了大概，就要敢于自己动手去体验。谁都有第一次。有些问题只有通过实践后才能明白，也只有实践才能把老师和书上的知识变成自己的，高手都是这样成材的。 
（3）选择一种合适的入门语言 面对各种各样的语言，应按什么样的顺序学呢？程序设计工具不外乎如下几类： 1）本地开发 应用软件开发的工具有：Visual Basic 、Delphi 、VC++ ( C++ Builder ) 等；数据库开发工具有：Visual Foxpro 、Oracle Developer 、Power Builder 等。 2）跨平台开发 开发工具如 Java 等。 3）网络开发 对客户端开发工具如：Java Script 等；对服务器开发工具如：PHP 、ASP 、JSP 、ISAPI 、NSAPI 、CGI 等。 以上不同的环境下几种开发工具中 VB 法简单并容易理解，界面设计是可设化的，易学、易用。选 VB 作为入门的方向对出学者是较为适合的。 
3. 注意理解一些重要概念 
一本程序设计的书看到的无非就是变量、函数、条件语句、循环语句等概念，但要真正能进行编程应用，需要深入理解这些概念，在理解的基础上应用，不要只简单地学习语法、结构，而要吃透针对这些语法、结构的应用例子，做到举一反三，触类旁通。 
4.掌握编程思想 
学习一门语言或开发工具，语法结构、功能调用是次要的，最主要是学习它的思想。例如学习 VC 就要学习 Windows 的内在机理、什么是线程......；学习 COM 就要知道 VTALBE 、类厂、接口、idl......，关键是学一种思想，有了思想，那么我们就可以触类旁通。 
5.多实践、多交流 
掌握编程思想必须在编程实际工作中去实践和体会。编程起步阶段要经常自己动手设计程序，具体设计时不要拘泥于固定的思维方式，遇到问题要多想几种解决的方案。这就要多交流，各人的思维方式不同、角度各异，各有高招，通过交流可不断吸收别人的长处，丰富编程实践，帮助自己提高水平。亲自动手进行程序设计是创造性思维应用的体现，也是培养逻辑思维的好方法。 
6.养成良好的编程习惯 
编程入门不难，但入门后不断学习是十分重要的，相对来说较为漫长。在此期间要注意养成一些良好的编程习惯。编程风格的好坏很大程度影响程序质量。良好的编程风格可以使程序结构清晰合理，且使程序代码便于维护。如代码的缩进编排、变量命令规则的一致性、代码的注释等。 
7.上网学编程 
在网上可以学到很多不同的编程思想、方法、经验和技巧，有大量的工具和作品及相关的辅导材料供下载。例如网站&ldquo;编程课堂&rdquo;（<a href="http://best.yeah.net/" rel="nofollow" target="_blank">http://best.yeah.net/</a>）主要以 VB 和 Delph；教学和交流为主，提供大量实用技巧；网站&ldquo;现在时编程学园&rdquo;（<a href="http://pshool.yeah.net/" rel="nofollow" target="_blank">http://pshool.yeah.net/</a>）是专门介绍C、VC、VB、Delphi 等的综合编程网站；网站&ldquo; VB 编程乐园 &rdquo;（<a href="http://www.vbeden.com/" rel="nofollow" target="_blank">http://www.vbeden.com/</a>）提供内容丰富而且实用的编程技术文章、精选控件、源代码下载、计算机考试、相关软件以及编程书籍推荐等等。 
8.加强计算机理论知识的再学习 
学编程是符合&ldquo;理论&rarr;实践&rarr;再理论&rarr;再实践&rdquo;的一个认识过程。一开始要具有一定的计算机理论基础知识，包括编程所需的数学基础知识，具备了入门的条件，就可以开始编程的实践，从实践中可以发现问题需要加强计算机理论知识的再学习。程序人人皆可编，但当你发现编到一定程度很难再提高的时候，就要回头来学习一些计算机科学和数学基础理论。{% endhighlight %}
<blockquote>
<p><a href="https://blog.csdn.net/finally_vince/article/details/124846343">https://blog.csdn.net/finally_vince/article/details/124846343</a></p>
<p>1、快速</p>
<p>对于快速这个词，如何快速学习编程，不要理解为走捷径，我的理解是通过一些方法，可以让你快速成长，进步很快，而不是只记得&ldquo;快速&rdquo;两个字，快速的看书、快速的写代码（偷懒时用复制代码），自以为做完了，其实理解得太肤浅，或者根本没有记得核心原理，日复一日，不但没有成长，反而后面的学习难度越来越大，最后导致根本看不懂，写了代码等于白写，根本不理解，有的老师说：敲多了就会了。</p>
<p>这句话其实要这样理解：自己的敲的是什么都不知道，等于白敲，更是记不住的。所以我的理解&ldquo;快速&rdquo;就是让自己&ldquo;慢下来&rdquo;，一点点的去细扣，再细扣，在理解代码后，或者最起码你要知道是干什么用的，剩下的才反复练习，坚持下去，你就会快速起来。</p>
<p>2、读代码</p>
<p>读代码是学习编程一个非常重要的环节，有人说：&ldquo;世界上80%的代码都不是很难也不是很简单&rdquo;。这话在我看来是有一定道理的，只要不是高深的代码，何谓高深代码：当前语言无法满足，当前算法无法实现。你要去创造，那是有难度的，只要市面上有的，你都可以模仿，所以大部分代码都是在模仿，套用一句俗语就是：套路，学套路。</p>
<p>&ldquo;我看不懂啊，所以干脆就不看了&rdquo;，我想很多人都是这样的看法，读代码，就是要让自己不舒服，8/2原则里，我们要用80%的时间花在你所学的20%的知识上，要习惯这个方式，并想办法去克服。我本人同样经历了这个痛苦的过程，时间长了，你会收获很多很多。</p>
<p>3、迷茫了，不要钻牛角尖</p>
<p>由于学习方法不同，有的童鞋情不自禁的就钻牛角尖了，你放心，钻角尖的人大多数是不会承认自己是在钻牛角尖的。我最大的错误是在学习编程陷入僵局的时候用了太长时间。在被卡住时，我会花很多时间在一些愚蠢的东西或一些我根本上不明白的东西上。</p>
<p>有时候我需要花费好几天时间才能完成这些工作，而原本我可以用这些时间做更多的事情和学习更多的东西，如果我能找到更好的解决方法的话。</p>
<p>卡在一个东西上面超过一个小时基本上就是在浪费时间了。如何避免僵局。三个点，第一是试着总是阅读更多关于你使用的技术，第二是咨询互联网，第三是向你认识的人请求帮助。也许别人的建议或解决方法可以给你提供另一个思路，即使没有完全解决你的问题，这个帮助也是极大的。<br />
&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />
版权声明：本文为CSDN博主「马剑威老师」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />
原文链接：https://blog.csdn.net/finally_vince/article/details/124846343</p>
</blockquote>
<p>错误习惯（纠正）：</p>
<p><strong>1、不要盲目追求框架等看起来很高级的技术</strong> ：很多人会过于急功近利，只想学习那些看起来很牛逼的技术。所以导致自己基础没打好，学这些技术时，又听不懂，所以在学习上感到困难导致想要放弃学习编程。</p>
<p>其实，这些看起来很牛逼的框架更新速度很快，只要你打好基础了，学习这些框架会容易很多，总结一句话就是：学习需要循序渐进。</p>
<p><strong>2、不要太过依靠别人</strong> ：有很多人在学习时总是自己不过脑子，然后遇到什么稍微难一点的问题，就直接问老师，问前辈。其实这样的学习方式，对你的学习帮助并不大，这些答案也还是在被人的脑海中。</p>
<p>在遇到问题时，需要自己学会尝试解决，这样对自己的学习帮助会更大，也有利于加深自己的印象。</p>
<p><strong>3、要懂得变通 </strong>：也有很多人在遇到问题时，喜欢太过于纠结，在这个难题上死磕，导致时间浪费了不少，然而问题还没有解决。</p>
<p>这时候，我们就需要懂得变通，可以先将这个问题记下来，然后去请教前辈，或者领域博主，现在很多前辈都很热心，千万不要觉得，他们不会帮助你。这样既节约了时间，又提高了学习效率。</p>
<p><strong>4、不要把问题想的太过复杂</strong>：有很多小伙伴都会把简单的问题想的复杂化。其实还是因为自己在心里已经把它定义成了非常难的问题，没有解决掉，就越来越觉得这个问题难、超难、怎么会这么难？从而导致自己解决不了这个问题，请教了前辈后，才知道：原来这个问题这么简单。</p>
<p>&nbsp;</p>
<p><img src="/uploads/ckeditor/pictures/214/image-20220815160623-1.png" style="height:780px; width:974px" /></p>
