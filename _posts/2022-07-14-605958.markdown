---
layout: post
title: "绑定手机号码， 点击 按钮后，出现： 60, 59, 58 .... "
date: "2022-07-14"
categories: 
---
<p>视图页面增加验证码的按钮，验证码的表单，使用jQuery进行验证：</p>

<pre>
&nbsp;<code>&lt;td&gt;&lt;%= link_to &#39;获取验证码&#39;, &#39;javascript:void(0)&#39;, id:&#39;send_validation_code&#39; %&gt;&lt;/td&gt;
&lt;script&gt;

&nbsp; var count=60,timer=null;

&nbsp; jQuery(&quot;#send_validation_code&quot;).click(function() {

&nbsp;&nbsp;&nbsp; let mobile = jQuery(&#39;#mobile&#39;).val()

&nbsp;&nbsp;&nbsp; let url =&nbsp; &#39;/front_ends/send_validation_code?type=mobile&amp;to=&#39; + mobile +&#39;&amp;account_id=&lt;%= current_account.id %&gt;&#39;

&nbsp;&nbsp;&nbsp; jQuery.get(url , function(data){

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; console.info(data)

&nbsp;&nbsp;&nbsp; })

&nbsp;&nbsp;&nbsp; /*防止用户重复点击按钮*/

&nbsp;&nbsp;&nbsp; if(timer==null){

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timer=setInterval(function(){count--;$(&quot;#send_validation_code&quot;).text(count+&quot;秒后获取验证码&quot;);

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(count&lt;=0){clearInterval(timer);$(&quot;#send_validation_code&quot;).text(&quot;点击获取验证码&quot;);timer=null;}},1000);

&nbsp;&nbsp;&nbsp; }

&nbsp; });

&lt;/script&gt;{% endhighlight %}

<p>后端进行方法的书写，进行与前端的交互</p>

<pre>
<code>&nbsp; def send_validation_code

&nbsp;&nbsp;&nbsp; type = params[:type]

&nbsp;&nbsp;&nbsp; to = params[:to]

&nbsp;&nbsp;&nbsp; code = ((0..9).to_a + (0..9).to_a).shuffle[0,4].join
&nbsp;&nbsp;&nbsp; if type == &#39;mobile&#39;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; YunPianJob.perform_now to, code<br />
&nbsp;&nbsp;&nbsp; else<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # TODO 修改参数，<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UserMailer.send_validation_email(to, code).deliver_now<br />
&nbsp;&nbsp;&nbsp; end &nbsp;&nbsp;&nbsp; ValidationCode.create code_type: type, code: code, valid_through: (Time.now + 15 * 60), account_id: current_account.id &nbsp;&nbsp;&nbsp; render json: {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result: &#39;ok&#39;,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; to: to,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; code: code<br />
&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />
&nbsp; end{% endhighlight %}

<p>增加云片的job，进行发送短信：（也可以申请阿里云等短信功能）</p>

<pre>
<code>require &#39;json&#39;

require &#39;uri&#39;

require &#39;net/http&#39;

require &#39;openssl&#39;

require &#39;httparty&#39;
class YunPianJob &lt; ApplicationJob

&nbsp; queue_as :default
&nbsp; def perform mobile, token

&nbsp;&nbsp;&nbsp; sms_url = &quot;https://sms.yunpian.com/v2/sms/single_send.json&quot;

&nbsp;&nbsp;&nbsp; #token = (&#39;A&#39;..&#39;Z&#39;).to_a + (0..9).to_a).shuffle[0,6].join

&nbsp;&nbsp;&nbsp; body = {

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :apikey =&gt; &quot;dec71e0688f54287ff598e139dc285ff&quot;,

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :mobile =&gt; &quot;17857570636&quot;,

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :text =&gt;&quot;【中报融媒体】您的验证码是#{token}。如非本人操作，请忽略本短信&quot;

&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;

&nbsp;&nbsp;&nbsp; logger.info(&#39;=== before send_sms&#39;)

&nbsp;&nbsp;&nbsp; logger.info(&quot;== body: #{body.inspect}&quot;)

&nbsp;&nbsp;&nbsp; logger.info(&quot;== sms url: #{sms_url}&quot;)

&nbsp;&nbsp;&nbsp; response = HTTParty.post(sms_url, :body =&gt; body )

&nbsp;&nbsp;&nbsp; logger.info(&quot;== response: #{response.inspect}&quot;)

&nbsp; end
end{% endhighlight %}

<p>&nbsp;</p>

