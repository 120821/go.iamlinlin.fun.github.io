---
layout: post
title: "asdf  - 部署 11.11"
date: "2022-11-11"
categories: 
---
<p>1.安装asdf</p>

{% highlight %}git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.10.2{% endhighlight %}

{% highlight %}然后增加 ~/.bashrc：(</code> source ./bashrc)</pre>

<pre class="shiki" style="background-color:#272822;">
<code class="hljs language-bash">. <span class="hljs-variable">$HOME</span>/.asdf/asdf.sh{% endhighlight %}

<p>asdf(查看是否显示所有命令)</p>

<p>2.安装bundle</p>

<p>sudo apt update</p>

<p>sudo apt install bundler</p>

<p>安装ruby</p>

<pre class="notranslate">
<code class="hljs language-csharp">asdf plugin <span class="hljs-keyword">add</span> ruby https:<span class="hljs-comment">//github.com/asdf-vm/asdf-ruby.git</span>{% endhighlight %}

<p>asdf install ruby latest</p>

<p>安装docker postgres</p>

<pre class="hljs sql">
 sudo apt-get <span class="hljs-operator"><span class="hljs-keyword">update</span></span></pre>

<pre class="hljs sql">
 sudo apt-get <span class="hljs-operator"><span class="hljs-keyword">update</span>
 sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-keyword">install</span>     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common
 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-<span class="hljs-keyword">key</span> <span class="hljs-keyword">add</span> -
 sudo apt-<span class="hljs-keyword">key</span> fingerprint <span class="hljs-number">0</span>EBFCD88
 sudo <span class="hljs-keyword">add</span>-apt-repository    <span class="hljs-string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&quot;</span>
 sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-keyword">update</span>
 sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-keyword">install</span> docker-ce docker-ce-cli containerd.io
 sudo docker run hello-world
 sudo docker run -it ubuntu bash</span></pre>

<p><span class="hljs-operator">安装docker compose</span></p>

<p>wget<code> https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-linux-x86_64(网太差了吧）</code></p>

<p>sudo mv docker-compose-linux-x86_64 /usr/local/bin/docker-compose</p>

<p>chmod +x /usr/local/bin/docker-compose</p>

<p><code>docker-compose --version<br />
Docker Compose version v2.5.0</code></p>

<p><code>实际上：</code></p>

<p>sudo apt&nbsp; install docker-compose</p>

<p>docker-compose --version<br />
docker-compose version 1.29.2, build unknown</p>

<p>wget https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-linux-x86_64</p>

<p>&nbsp;mv docker-compose-linux-x86_64 /usr/bin/docker-compose</p>

<p>chmod +x /usr/bin/docker-compose</p>

<p>~# docker-compose --version<br />
Docker Compose version v2.5.0</p>

<p><code>安装postgres</code></p>

<p>sudo docker pull postgres:14</p>

<p>docker run&nbsp; -e POSTGRES_PASSWORD=abdfdd3859a24c -d postgres</p>

<p>docker ps<br />
CONTAINER ID&nbsp;&nbsp; IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NAMES<br />
42ee11df0e0f&nbsp;&nbsp; postgres&nbsp;&nbsp; &quot;docker-entrypoint.s&hellip;&quot;&nbsp;</p>

<p>docker inspect 42ee</p>

<p>ip address： 172.17.0.2</p>

<p><img height="261" src="/uploads/ckeditor/pictures/721/image-20221111105553-1.png" width="447" /></p>

<p>3.安装vim</p>

<p>git clone https://github.com/sg552/happy_book_vim</p>

<pre class="notranslate">
<code class="hljs language-bash"><span class="hljs-built_in">cp</span> dot_vimrc_for_vim8 ~/.vimrc{% endhighlight %}

<pre class="notranslate">
<code class="hljs language-ruby"><span class="hljs-symbol">:PluginInstall</span>{% endhighlight %}

<p><code class="hljs language-ruby"><span class="hljs-symbol">4.安装go caddy</span></code></p>

<p><code>mkdir /opt/app/go</code></p>

<p><code>进入 /opt/app/go</code></p>

<pre>
<code class="hljs language-bash">wget https://go.dev/dl/go1.19.3.linux-amd64.tar.gz
{% endhighlight %}

<p>tar zxvf go1.19.3.linux-amd64.tar.gz</p>

<pre>
<code class="hljs language-bash"><span class="hljs-comment">#golang安装目录</span>

<span class="hljs-built_in">export</span> GOROOT=/opt/app/go/go

<span class="hljs-comment">#gopath</span>

<span class="hljs-built_in">export</span> GOPATH=/opt/app

<span class="hljs-comment">#go编译可执行文件</span>

<span class="hljs-built_in">export</span> GOBIN=<span class="hljs-variable">$GOPATH</span>/bin

<span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$GOPATH</span>:<span class="hljs-variable">$GOBIN</span>:<span class="hljs-variable">$GOROOT</span>/bin:/opt/app/go/go:<span class="hljs-variable">$PATH</span>{% endhighlight %}

<p>source ~/.bashrc</p>

<p>:/opt/app# go version<br />
go version go1.19.3 linux/amd64</p>

<p>下载xcaddy</p>

<pre>
<code class="hljs language-bash">go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest{% endhighlight %}

<p>4.启动项目</p>

<p>Bundler 2.3.5 is running, but your lockfile was generated with 2.3.11. Installing Bundler 2.3.11 and restarting using that version.</p>

<p>gem install bundler:2.3.11</p>

<p>bundle</p>

<p>修改Gemfile，把链接修改为China的就可以bundle了</p>

<p>但是服务器没有反应了，还没安装完。</p>

<p>重新登录也没有反应。(docker start &lt;id&gt;&nbsp;内存升级，重启服务器)</p>

<p>安装gem</p>

<p>bundle</p>

<p>重启postgres</p>

<p>docker start 42ee11df0e0f</p>

<p>bundle exec rake db:create</p>

<p>bundle exec rake db:migrate</p>

<p>docker start &lt;id&gt;&nbsp;</p>

<p>运行一个已经存在的,并且已经停止的container&nbsp;&nbsp;</p>

<p>&nbsp;</p>

<p>下面的就别看了：</p>

<p>创建用户Ubuntu，没有密码（密码回车了，空）不能用，还是需要密码，等下删除用户。</p>

<p><img height="698" src="/uploads/ckeditor/pictures/722/image-20221111111256-2.png" width="719" /></p>

<p>&nbsp;</p>

