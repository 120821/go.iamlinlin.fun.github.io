---
layout: post
title: "ruby - %Q和%q的区别"
date: "2022-11-18"
categories: 
---
<p><a href="https://www.runoob.com/try/runcode.php?filename=strobj_demo3&amp;type=ruby">菜鸟教程的脚本</a>&nbsp;&nbsp;<a href="https://www.cnblogs.com/stellar/p/5724767.html">CSDN的文章</a>&nbsp;&nbsp;<a href="https://www.runoob.com/ruby/ruby-string.html">菜鸟教程</a></p>

<p>在看ruby的教程时，看到了%Q和%q的使用，记录一下两者的区别</p>

<pre><code>Ruby 中支持一种采用 %q 和 %Q 来引导的字符串变量，%q 使用的是单引号引用规则，而 %Q 是双引号引用规则，后面再接一个 (! [ { 等等的开始界定符和与 } ] ) 等等的末尾界定符。

跟在 q 或 Q 后面的字符是分界符.分界符可以是任意一个非字母数字的单字节字符.如:[,{,(,&lt;,!等,字符串会一直读取到发现相匹配的结束符为止.</code></pre>

<p><strong>%Q</strong>：用于替代双引号的字符串. 当你需要在字符串里放入很多引号时候, 可以直接用下面方法而不需要在引号前逐个添加反斜杠 (\&quot;)</p>

<pre>
<code>&gt;&gt; %Q(Joe said: &quot;Frank said: &quot;#{what_frank_said}&quot;&quot;)
=&gt; &quot;Joe said: &quot;Frank said: &quot;Hello!&quot;&quot;&quot;</code>
</pre>

<p><code>(</code>...<code>)</code>也可用其他非数字字母的符号或成对的符号代替, 诸如<code>[</code>...<code>]</code>,&nbsp;<code>!</code>...<code>!</code>,&nbsp;<code>+</code>...<code>+</code>,<code>{</code>...<code>}</code>,&nbsp;<code>&lt;</code>...<code>&gt;</code>等.<br />
<br />
以下写法全部与上面等效:</p>

<pre>
<code>&gt;&gt; %Q!Joe said: &quot;Frank said: &quot;#{what_frank_said}&quot;&quot;!
&gt;&gt; %Q[Joe said: &quot;Frank said: &quot;#{what_frank_said}&quot;&quot;]
&gt;&gt; %Q+Joe said: &quot;Frank said: &quot;#{what_frank_said}&quot;&quot;+</code>
</pre>

<p>除此之外还可省略<code>Q</code>写作:</p>

<pre>
<code>&gt;&gt; %/Joe said: &quot;Frank said: &quot;#{what_frank_said}&quot;&quot;/
=&gt; &quot;Joe said: &quot;Frank said: &quot;Hello!&quot;&quot;&quot; </code>
</pre>

<p><strong>%q</strong>：与<code>%Q</code>类似, 但是表示的是单引号字符串</p>

<pre>
<code>&gt;&gt; %q(Joe said: &#39;Frank said: &#39;#{what_frank_said} &#39; &#39;)
=&gt; &quot;Joe said: &#39;Frank said: &#39;\#{what_frank_said} &#39; &#39;&quot;    </code></pre>

<p>示例：</p>

<p><code>desc1 = %Q{Ruby 的字符串可以使用 &#39;&#39; 和 &quot;&quot;。}<br />
desc2 = %q|Ruby 的字符串可以使用 &#39;&#39; 和 &quot;&quot;。|</code></p>

<pre>
<code>puts desc1

puts desc2</code></pre>

<p>&nbsp;</p>

<p>输出：</p>

<p>&nbsp;</p>

<pre>
<code>Ruby 的字符串可以使用 &#39;&#39; 和 &quot;&quot;。

Ruby 的字符串可以使用 &#39;&#39; 和 &quot;&quot;。</code></pre>

